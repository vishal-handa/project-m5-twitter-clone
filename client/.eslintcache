[{"C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\TweetActions.js":"1","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\Tweetfeed.js":"2","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\Profile.js":"3","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\CurrentUserContext.js":"4","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\Bookmarks.js":"5","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\Sidebar.js":"6","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\Notifications.js":"7","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\Globalstyles.js":"8","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\constants.js":"9","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\UserBanner.js":"10","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\Homefeed.js":"11","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\index.js":"12","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\TweetDetails.js":"13","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\ProfileActions.js":"14","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\App.js":"15"},{"size":3265,"mtime":1611510047702,"results":"16","hashOfConfig":"17"},{"size":3198,"mtime":1611509701224,"results":"18","hashOfConfig":"17"},{"size":2504,"mtime":1611528177422,"results":"19","hashOfConfig":"17"},{"size":1199,"mtime":1611427218603,"results":"20","hashOfConfig":"17"},{"size":198,"mtime":1610910182500,"results":"21","hashOfConfig":"17"},{"size":2466,"mtime":1611422081969,"results":"22","hashOfConfig":"17"},{"size":210,"mtime":1610910181732,"results":"23","hashOfConfig":"17"},{"size":342,"mtime":1610923202644,"results":"24","hashOfConfig":"17"},{"size":169,"mtime":1610914516652,"results":"25","hashOfConfig":"17"},{"size":3749,"mtime":1611527934822,"results":"26","hashOfConfig":"17"},{"size":3888,"mtime":1611458377945,"results":"27","hashOfConfig":"17"},{"size":284,"mtime":1611008239000,"results":"28","hashOfConfig":"17"},{"size":2867,"mtime":1611358666981,"results":"29","hashOfConfig":"17"},{"size":1148,"mtime":1611527854241,"results":"30","hashOfConfig":"17"},{"size":1123,"mtime":1611276128601,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"176xkcj",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\TweetActions.js",["70"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from './Globalstyles';\r\nimport { FaRegComment, FaRetweet, FaRegHeart } from \"react-icons/fa\";\r\nimport { FiUpload } from \"react-icons/fi\";\r\n\r\nconst TweetActions=({isLiked,\r\n    isRetweeted,\r\n    numLikes,\r\n    numRetweets,\r\n    tweetid})=>{\r\n        const [tweetLiked, setTweetLiked]=useState(isLiked);\r\n        const [numOfLikes, setNumOfLikes]=useState(numLikes);\r\n        const [tweetRetweeted, setTweetRetweeted]=useState(isRetweeted);\r\n        const [numOfRetweets, setNumOfRetweets]=useState(numRetweets)\r\n        const handleLike=()=>{\r\n            if(tweetLiked){\r\n                setTweetLiked(!tweetLiked);\r\n                setNumOfLikes(numOfLikes-1);\r\n            }\r\n            else{\r\n                setTweetLiked(!tweetLiked);\r\n                setNumOfLikes(numOfLikes+1);\r\n            }\r\n            fetch(`api/tweet/${tweetid}/like`,{\r\n                method:\"PUT\",\r\n                body:JSON.stringify({like:!tweetLiked}),\r\n                headers:{\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            })\r\n            .then(res=>res.json())\r\n            .then(res=>console.log(res))\r\n            .catch(err=>console.log(err));\r\n        };\r\n\r\n        const handleRetweet=()=>{\r\n            if (tweetRetweeted){\r\n                setTweetRetweeted(!tweetRetweeted);\r\n                setNumOfRetweets(numOfRetweets - 1);\r\n            } \r\n            else{\r\n                setTweetRetweeted(!tweetRetweeted);\r\n                setNumOfRetweets(numOfRetweets + 1);\r\n            }\r\n            fetch(`/api/tweet/${tweetid}/retweet`, {\r\n                method: \"PUT\",\r\n                body: JSON.stringify({retweet: !tweetRetweeted,}),\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data=>console.log(data))\r\n            .catch(err=>console.log(err));\r\n        };\r\n        return(\r\n            <Icons>\r\n                <Button>\r\n                    <FaRegComment />\r\n                </Button>\r\n                \r\n                <Button onClick={handleRetweet}>\r\n                    <FaRetweet/>\r\n                    {numOfRetweets>0 ? <span>{\"   \"}{numOfRetweets}</span> : <span>{\" \"}</span>}\r\n                </Button>\r\n                \r\n                <Button onClick={handleLike}>\r\n                    <FaRegHeart />\r\n                    {numOfLikes>0 ? <span>{\"   \"}{numOfLikes}</span> : <span>{\" \"}</span>}\r\n                </Button>\r\n                \r\n                <Button>\r\n                    <FiUpload/>\r\n                </Button>\r\n            </Icons>\r\n        )\r\n};\r\n\r\nconst Icons=styled.div`\r\n    margin-inline-start: -45px;\r\n    margin-right:50px;\r\n    width:100%;\r\n    svg{\r\n        margin-left:100px;\r\n    }\r\n`;\r\n\r\nconst Button=styled.button`\r\n    border: none;\r\n    outline:none;\r\n    background: none;\r\n    cursor: pointer;\r\n    color: grey;\r\n`;\r\n\r\nexport default TweetActions;\r\n\r\n// isLiked,\r\n//     isRetweeted,\r\n//     numLikes,\r\n//     numRetweets,\r\n//     tweetid",["71","72"],"C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\Tweetfeed.js",["73","74"],"C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\Profile.js",["75"],"C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\CurrentUserContext.js",[],["76","77"],"C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\Bookmarks.js",["78"],"C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\Sidebar.js",[],["79","80"],"C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\Notifications.js",["81"],"import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Notifications=()=>{\r\n    return(\r\n        <div>\r\n            Notifications\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;",["82","83"],"C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\Globalstyles.js",["84"],"\r\nimport React from \"react\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\n// Global styles to be applied on the entire application\r\nconst GlobalStyles = createGlobalStyle`\r\n\r\n    p,div{\r\n        font-size: 16px;\r\n    }\r\n    *{\r\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\constants.js",[],"C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\UserBanner.js",["85","86","87","88"],"C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\Homefeed.js",["89","90"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from './Globalstyles';\r\nimport COLORS from \"./constants\";\r\nimport Tweetfeed from \"./Tweetfeed\";\r\nimport { CurrentUserContext } from \"./CurrentUserContext\";\r\n\r\n\r\nconst Homefeed=()=>{\r\n    const [value, setValue]=useState(\"\");\r\n    const { currentUser, homefeed, fetchHomeFeed }=React.useContext(CurrentUserContext);\r\n    const maxCharacterLength=10;\r\n\r\n\r\n    const handleSubmit=(ev)=>{\r\n        ev.preventDefault();\r\n        fetch(\"/api/tweet\",{\r\n            method: 'POST',\r\n            body:    JSON.stringify({status:value}),\r\n            headers: { 'Content-Type': 'application/json' },\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=> fetchHomeFeed())\r\n    }\r\n\r\n    let charlength=maxCharacterLength-value.length;\r\n    //console.log(homefeed);\r\n\r\n    return(\r\n        <Main>\r\n            { currentUser && <Header>\r\n                <Form id=\"input-form\" onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Img src={currentUser.profile.avatarSrc}/>\r\n                        <Input  id=\"textarea\"\r\n                                placeholder=\"What's on your mind?\" \r\n                                onChange={(ev)=>setValue(ev.target.value)} \r\n                                value={value}/>\r\n                    </div>\r\n                    <MiniContainer>\r\n                        <CharCount style={{color: charlength>=0? \"black\" : \"red\"}}>{charlength}</CharCount>\r\n                        <Button disabled={charlength<0 || value.length===0}>Meow</Button>\r\n                    </MiniContainer>\r\n                </Form>\r\n            </Header>}\r\n            <Bar/>\r\n            {homefeed ? <div>{homefeed.tweetIds.map((id, i)=>{\r\n                const tweets=homefeed.tweetsById[id];\r\n                if(!tweets){\r\n                    return null\r\n                }\r\n                return (\r\n                    <Tweetfeed\r\n                        key={i}\r\n                        tweetid={id}\r\n                        displayName={tweets.author.displayName}\r\n                        authorHandle={tweets.author.handle}\r\n                        status={tweets.status}\r\n                        mediaObject={tweets.media}\r\n                        media={(tweets.media.length>0) ? tweets.media[0].url : null}\r\n                        timestamp={tweets.timestamp}\r\n                        avatar={tweets.author.avatarSrc}\r\n                        retweetHandle={(tweets.retweetFrom) ? tweets.retweetFrom.handle : null}\r\n                        isLiked={tweets.isLiked}\r\n                        isRetweeted={tweets.isRetweeted}\r\n                        numLikes={tweets.numLikes}\r\n                        numRetweets={tweets.numRetweets}\r\n                    />\r\n                )\r\n            })}</div> : \"Loading\"}\r\n    </Main>\r\n    )\r\n};\r\n\r\nconst Main=styled.div`\r\n    border:1px solid #cdd0d4;\r\n    max-width:70%;\r\n`;\r\n\r\nconst Bar=styled.div`\r\n    width:100%;\r\n    height:10px;\r\n    background:#cdd0d4;\r\n    outline:none;\r\n`;\r\n\r\nconst Img=styled.img`\r\n    vertical-align: top;\r\n    padding:5px;\r\n    height:40px;\r\n    width:40px;\r\n    border-radius:50%;\r\n`;\r\n\r\nconst Header=styled.div`\r\n    display:flex;\r\n`;\r\nconst Form=styled.form`\r\n    width:100%;\r\n    float:right;\r\n`;\r\n\r\nconst Input=styled.textarea`\r\n    width:93%;\r\n    height:100px;\r\n    border:none;\r\n    outline:none;\r\n    resize:none;\r\n    &.active{\r\n        outline:none;\r\n    }\r\n`;\r\n\r\nconst MiniContainer=styled.div`\r\ndisplay:flex;\r\n    float:right;\r\n`;\r\n\r\nconst CharCount=styled.p`\r\n    margin-right:10px;\r\n`;\r\n\r\nconst Button=styled.button`\r\n    width:70px;\r\n    background:${COLORS.primary};\r\n    color:white;\r\n    padding:10px;\r\n    outline:none;\r\n    border:none;\r\n    border-radius:60px;\r\n    &:hover{\r\n        cursor:pointer;\r\n    }\r\n`;\r\n\r\nexport default Homefeed;","C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\index.js",[],"C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\TweetDetails.js",[],"C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\components\\ProfileActions.js",["91","92","93"],"C:\\Users\\vhand\\Documents\\concordia-bootcamps\\project-m5-twitter-clone\\client\\src\\App.js",["94"],{"ruleId":"95","severity":1,"message":"96","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":20},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"95","severity":1,"message":"103","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":20},{"ruleId":"104","severity":1,"message":"105","line":21,"column":7,"nodeType":"106","endLine":21,"endColumn":9,"suggestions":"107"},{"ruleId":"99","replacedBy":"108"},{"ruleId":"101","replacedBy":"109"},{"ruleId":"95","severity":1,"message":"110","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"99","replacedBy":"111"},{"ruleId":"101","replacedBy":"112"},{"ruleId":"95","severity":1,"message":"110","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"99","replacedBy":"113"},{"ruleId":"101","replacedBy":"114"},{"ruleId":"95","severity":1,"message":"115","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"116","line":1,"column":16,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"103","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":35},{"ruleId":"95","severity":1,"message":"117","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":19},{"ruleId":"95","severity":1,"message":"118","line":18,"column":15,"nodeType":"97","messageId":"98","endLine":18,"endColumn":25},{"ruleId":"95","severity":1,"message":"116","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"96","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":20},{"ruleId":"95","severity":1,"message":"116","line":1,"column":16,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"103","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":35},{"ruleId":"95","severity":1,"message":"117","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":19},{"ruleId":"95","severity":1,"message":"119","line":5,"column":3,"nodeType":"97","messageId":"98","endLine":5,"endColumn":7},"no-unused-vars","'GlobalStyles' is defined but never used.","Identifier","unusedVar","no-native-reassign",["120"],"no-negated-in-lhs",["121"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'profileId'. Either include it or remove the dependency array.","ArrayExpression",["122"],["120"],["121"],"'styled' is defined but never used.",["120"],["121"],["120"],["121"],"'React' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'isFollowed' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [profileId]",{"range":"125","text":"126"},[728,730],"[profileId]"]